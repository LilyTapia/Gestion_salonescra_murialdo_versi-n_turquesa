# Generated by Django 5.0.7 on 2025-09-27 19:37
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


def seed_courses(apps, schema_editor):
    Course = apps.get_model('booking', 'Course')
    names = []
    for level in range(1, 9):
        for section in ['A', 'B']:
            names.append(f"{level} Basico {section}")
    for level in range(1, 5):
        for section in ['A', 'B']:
            names.append(f"{level} Medio {section}")
    for order, name in enumerate(names, start=1):
        Course.objects.get_or_create(name=name, defaults={'order': order})


def remove_courses(apps, schema_editor):
    Course = apps.get_model('booking', 'Course')
    names = []
    for level in range(1, 9):
        for section in ['A', 'B']:
            names.append(f"{level} Basico {section}")
    for level in range(1, 5):
        for section in ['A', 'B']:
            names.append(f"{level} Medio {section}")
    Course.objects.filter(name__in=names).delete()


def seed_subjects_roles(apps, schema_editor):
    Subject = apps.get_model('booking', 'Subject')
    TeacherRole = apps.get_model('booking', 'TeacherRole')
    base_subjects = [
        'Ciencias', 'Matematicas', 'Educacion Fisica', 'Lenguaje', 'Ingles',
        'Artes', 'Tecnologia', 'Musica', 'Religion', 'Historia', 'Orientacion'
    ]
    for name in base_subjects:
        Subject.objects.get_or_create(name=name)
    base_roles = [
        'Profesor/a', 'Jefe/a de Curso', 'Coordinador/a', 'Inspector/a',
        'Orientador/a', 'Encargado/a CRA'
    ]
    for name in base_roles:
        TeacherRole.objects.get_or_create(name=name)


def remove_subjects_roles(apps, schema_editor):
    Subject = apps.get_model('booking', 'Subject')
    TeacherRole = apps.get_model('booking', 'TeacherRole')
    Subject.objects.filter(name__in=[
        'Ciencias', 'Matematicas', 'Educacion Fisica', 'Lenguaje', 'Ingles',
        'Artes', 'Tecnologia', 'Musica', 'Religion', 'Historia', 'Orientacion'
    ]).delete()
    TeacherRole.objects.filter(name__in=[
        'Profesor/a', 'Jefe/a de Curso', 'Coordinador/a', 'Inspector/a',
        'Orientador/a', 'Encargado/a CRA'
    ]).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('booking', '0003_notification'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={'ordering': ['order', 'name']},
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={'ordering': ['name']},
        ),
        migrations.CreateModel(
            name='TeacherRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={'ordering': ['name']},
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courses', models.ManyToManyField(blank=True, related_name='teachers', to='booking.course')),
                ('roles', models.ManyToManyField(blank=True, related_name='teachers', to='booking.teacherrole')),
                ('subjects', models.ManyToManyField(blank=True, related_name='teachers', to='booking.subject')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RunPython(seed_courses, remove_courses),
        migrations.RunPython(seed_subjects_roles, remove_subjects_roles),
    ]
